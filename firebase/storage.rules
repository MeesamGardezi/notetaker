rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Default rule: No public access
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // User-specific files
    match /users/{userId}/{allPaths=**} {
      // Users can read and write their own files
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User's notes media files
    match /users/{userId}/notes/{noteId}/{filename} {
      // Allow read if user owns the note
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow create if user owns the note, file is less than 10MB, and is of allowed type
      allow create: if request.auth != null && 
                     request.auth.uid == userId &&
                     request.resource.size < 10 * 1024 * 1024 &&
                     (
                       request.resource.contentType.matches('image/.*') ||
                       request.resource.contentType.matches('application/pdf') ||
                       request.resource.contentType.matches('application/msword') ||
                       request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document')
                     );
      
      // Allow delete if user owns the note
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // User profile pictures
    match /users/{userId}/profile/{filename} {
      // User can read/write their own profile picture
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow public read for profile pictures
      allow read: if request.auth != null;
    }
  }
}